// Gradle build file for a Vert.x based backend project
plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'com.venelinpetkov.backend.vertback'
version '1.0-SNAPSHOT'
apply plugin: 'java'

// External repositories
repositories {
    mavenCentral()
}
// We are using Java 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Verticle Deployment
mainClassName = 'io.vertx.core.Launcher'

// Define helper variables
def vertxVersion = '3.4.2'
def mainVerticleName = 'com.venelinpetkov.backend.vertback.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = 'gradle classes'

repositories {
    mavenCentral()
}

// TODO: clean up for the skeleton project
dependencies {
    // Vertx dependencies
    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"
    compile "io.vertx:vertx-web-templ-freemarker:$vertxVersion"
    compile "io.vertx:vertx-jdbc-client:$vertxVersion"
    compile "io.vertx:vertx-service-proxy:$vertxVersion"
    compile "io.vertx:vertx-codegen:$vertxVersion"
    compile "io.vertx:vertx-unit:$vertxVersion"
    compile "io.vertx:vertx-web-client:$vertxVersion"
    compile "io.vertx:vertx-auth-shiro:$vertxVersion"
    compile "io.vertx:vertx-auth-jwt:$vertxVersion"
    compile "io.vertx:vertx-rx-java:$vertxVersion"
    compile "org.hsqldb:hsqldb:2.3.4"
    compile "com.github.rjeschke:txtmark:0.13"
    // Test dependencies
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    generated{
        java.srcDir "${projectDir}/src/generated/java"
    }
}

task generateProxies(type: JavaCompile, group: 'build', description: 'Generates the Vertx proxies') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-Acodegen.output=${projectDir}/src/main"
    ]
    destinationDir = file("${projectDir}/src/generated/java")
}

compileJava{
    dependsOn(generateProxies)
    source    += sourceSets.generated.java
    options.compilerArgs = [
            "-Acodetrans.output=${projectDir}/src/main"
    ]
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes "Main-Verticle": mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
